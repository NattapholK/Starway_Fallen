// File: AutoSceneChangeOnBossDeath.cs
using UnityEngine;
using UnityEngine.SceneManagement;

[RequireComponent(typeof(BossHealth))]
public class AutoSceneChangeOnBossDeath : MonoBehaviour
{
    [Header("Scene to load when Boss dies")]
    [Tooltip("‡∏ä‡∏∑‡πà‡∏≠ Scene ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏•‡∏±‡∏á‡∏ö‡∏≠‡∏™‡∏ï‡∏≤‡∏¢ (‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô Build Settings)")]
    public string nextSceneName = "NextLevel";

    [Header("Transition Settings")]
    [Tooltip("‡πÄ‡∏ß‡∏•‡∏≤‡∏£‡∏≠‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ã‡∏µ‡∏ô (‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏ä‡∏±‡πà‡∏ô/‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Å‡∏ï‡πå‡πÄ‡∏•‡πà‡∏ô‡∏Å‡πà‡∏≠‡∏ô)")]
    public float delayBeforeLoad = 2.0f;

    [Tooltip("‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏à‡∏≤‡∏á‡πÄ‡∏Ç‡πâ‡∏≤ (fade to black)")]
    public float fadeInDuration = 0.6f;

    [Tooltip("‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏à‡∏≤‡∏á‡∏≠‡∏≠‡∏Å (fade from black)")]
    public float fadeOutDuration = 0.6f;

    [Header("Optional: GameSession link (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)")]
    public GameSession session;

    private bool hasTriggered = false;

    void Awake()
    {
        // ‡∏´‡∏≤ GameSession ‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ
        if (session == null)
        {
#if UNITY_2023_1_OR_NEWER
            session = Object.FindFirstObjectByType<GameSession>(FindObjectsInactive.Include);
#else
            session = FindObjectOfType<GameSession>();
#endif
            if (session == null)
            {
                var go = new GameObject("_GameSession");
                session = go.AddComponent<GameSession>();
            }
        }

        // ‡∏ú‡∏π‡∏Å event ‡∏Å‡∏±‡∏ö BossHealth
        var bh = GetComponent<BossHealth>();
        if (bh != null)
        {
            bh.onDeath.AddListener(OnBossDeath);
        }
        else
        {
            Debug.LogError("[AutoSceneChangeOnBossDeath] ‚ùå BossHealth not found on this GameObject.");
        }
    }

    public void OnBossDeath()
    {
        if (hasTriggered) return; // ‡∏Å‡∏±‡∏ô‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ã‡πâ‡∏≥
        hasTriggered = true;

        Debug.Log("[AutoSceneChangeOnBossDeath] üåÄ Boss defeated! Waiting before scene transition...");

        // ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÑ‡∏ß‡πâ‡πÉ‡∏ô GameSession (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)
        if (session != null)
            session.lastRunSeconds = Time.timeSinceLevelLoad;

        // ‡πÄ‡∏£‡∏¥‡πà‡∏° coroutine ‡∏£‡∏≠‡πÅ‡∏•‡∏∞‡πÇ‡∏´‡∏•‡∏î‡∏ã‡∏µ‡∏ô
        StartCoroutine(WaitAndLoadScene());
    }

    private System.Collections.IEnumerator WaitAndLoadScene()
    {
        // ‡∏´‡∏ô‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏™‡∏ï‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß‡∏°‡∏µ‡∏≠‡∏ô‡∏¥‡πÄ‡∏°‡∏ä‡∏±‡∏ô/‡πÄ‡∏≠‡∏ü‡πÄ‡∏ü‡∏Å‡∏ï‡πå‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ã‡∏µ‡∏ô
        yield return new WaitForSeconds(delayBeforeLoad);

        // ‡πÇ‡∏´‡∏•‡∏î‡∏ã‡∏µ‡∏ô‡∏û‡∏£‡πâ‡∏≠‡∏° Fade ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ SceneFader
        if (SceneFader.Instance != null)
        {
            SceneFader.Instance.LoadSceneWithFade(nextSceneName, fadeInDuration, fadeOutDuration);
        }
        else
        {
            SceneManager.LoadScene(nextSceneName);
        }
    }

    void OnDestroy()
    {
        var bh = GetComponent<BossHealth>();
        if (bh != null)
        {
            bh.onDeath.RemoveListener(OnBossDeath);
        }
    }
}
